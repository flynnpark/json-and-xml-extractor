{"version":3,"sources":["components/DataSet/DataSetPresenter.js","components/DataSet/index.js","components/SupplierList/SupplierListPresenter.js","components/SupplierList/index.js","components/Preview/PreviewPresenter.js","components/Preview/index.js","components/App/AppPresenter.js","components/App/index.js","components/App/AppContainer.js","index.js"],"names":["DataSetWrapper","styled","div","_templateObject","DataSetList","_templateObject2","DataItem","span","_templateObject3","DataSetPresenter","props","dataSet","react_default","a","createElement","map","data","key","SupplierListWrapper","SupplierListPresenter_templateObject","SupplierRow","SupplierListPresenter_templateObject2","SupplierName","SupplierListPresenter_templateObject3","_templateObject4","SupplierListPresenter","checkedList","supplierList","handleSetData","supplier","id","type","name","value","checked","includes","onChange","item","SupplierListPresenter_DataItem","PreviewWrapper","PreviewPresenter_templateObject","PreviewContainer","PreviewPresenter_templateObject2","ResultWrapper","PreviewPresenter_templateObject3","PreviewPresenter","jsonResult","xmlResult","GlobalStyle","createGlobalStyle","AppPresenter_templateObject","reset","Container","AppPresenter_templateObject2","InfoWrapper","AppPresenter_templateObject3","AppPresenter","extractFormatList","downloadResult","DataSet","SupplierList","extractFormat","Preview","onClick","AppContainer","state","supplierId","_this$state","_this","splice","indexOf","push","setState","Object","objectSpread","getJsonResult","_this$state2","supplierResult","result","dataFormat","JSON","stringify","getXmlResult","_this$state3","defineProperty","js2xml","parse","resultType","element","document","Blob","href","URL","createObjectURL","download","concat","window","open","_this$state4","this","App_AppPresenter","Component","ReactDOM","render","App","getElementById"],"mappings":"wwBAGA,IAAMA,EAAiBC,UAAOC,IAAVC,KAUdC,EAAcH,UAAOC,IAAVG,KAMXC,EAAWL,UAAOM,KAAVC,KCjBCC,EDwBU,SAAAC,GAAS,IACxBC,EAAYD,EAAZC,QACR,OACEC,EAAAC,EAAAC,cAACd,EAAD,KACEY,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAACV,EAAD,KACGO,EAAQI,IAAI,SAAAC,GAAI,OACfJ,EAAAC,EAAAC,cAACR,EAAD,CAAUW,IAAKD,GAAOA,mrBE9BhC,IAAME,EAAsBjB,UAAOC,IAAViB,KAUnBC,EAAcnB,UAAOC,IAAVmB,KAOXC,EAAerB,UAAOC,IAAVqB,KAMZjB,EAAWL,UAAOM,KAAViB,KCxBCC,EDgCe,SAAAf,GAAS,IAC7BgB,EAA6ChB,EAA7CgB,YAAaC,EAAgCjB,EAAhCiB,aAAcC,EAAkBlB,EAAlBkB,cACnC,OACEhB,EAAAC,EAAAC,cAACI,EAAD,KACEN,EAAAC,EAAAC,cAAA,yDACCa,EAAaZ,IAAI,SAAAc,GAAQ,OACxBjB,EAAAC,EAAAC,cAACM,EAAD,CAAaH,IAAKY,EAASC,IACzBlB,EAAAC,EAAAC,cAAA,SACEiB,KAAK,WACLC,KAAMH,EAASC,GACfG,MAAOJ,EAASC,GAChBI,UAASR,EAAYS,SAASN,EAASC,IACvCM,SAAU,kBAAMR,EAAcC,EAASC,OAEzClB,EAAAC,EAAAC,cAACQ,EAAD,KAAeO,EAASG,MACvBH,EAASb,KAAKD,IAAI,SAAAsB,GAAI,OACrBzB,EAAAC,EAAAC,cAACwB,EAAD,CAAUrB,IAAKoB,GAAOA,8fE/ClC,IAAME,EAAiBtC,UAAOC,IAAVsC,KAUdC,EAAmBxC,UAAOC,IAAVwC,KAMhBC,EAAgB1C,UAAOC,IAAV0C,KCjBJC,EDuBU,SAAAnC,GAAS,IACxBoC,EAA0BpC,EAA1BoC,WAAYC,EAAcrC,EAAdqC,UACpB,OACEnC,EAAAC,EAAAC,cAACyB,EAAD,KACE3B,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAC2B,EAAD,KACE7B,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,WAAMgC,IAERlC,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,WAAMiC,qqBE7BhB,IAAMC,EAAcC,4BAAHC,IACbC,KAgBEC,EAAYnD,UAAOC,IAAVmD,KAMTC,EAAcrD,UAAOC,IAAVqD,KAiDFC,EAvCM,SAAA9C,GAAS,IAE1BgB,EAQEhB,EARFgB,YACAC,EAOEjB,EAPFiB,aACAhB,EAMED,EANFC,QACA8C,EAKE/C,EALF+C,kBACA7B,EAIElB,EAJFkB,cACAkB,EAGEpC,EAHFoC,WACAC,EAEErC,EAFFqC,UACAW,EACEhD,EADFgD,eAEF,OACE9C,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAACkC,EAAD,MACApC,EAAAC,EAAAC,cAAC6C,EAAD,CAAShD,QAASA,IAClBC,EAAAC,EAAAC,cAAC8C,EAAD,CACElC,YAAaA,EACbC,aAAcA,EACdhB,QAASA,EACTiB,cAAeA,IAEjBhB,EAAAC,EAAAC,cAACwC,EAAD,KACE1C,EAAAC,EAAAC,cAAA,0DACC2C,EAAkB1C,IAAI,SAAA8C,GAAa,OAClCjD,EAAAC,EAAAC,cAAA,QAAMG,IAAK4C,GAAgBA,MAG/BjD,EAAAC,EAAAC,cAACgD,EAAD,CAAShB,WAAYA,EAAYC,UAAWA,IAC5CnC,EAAAC,EAAAC,cAACwC,EAAD,KACE1C,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQiD,QAAS,kBAAML,EAAe,UAAtC,iBACA9C,EAAAC,EAAAC,cAAA,UAAQiD,QAAS,kBAAML,EAAe,SAAtC,oBCvEKM,6MCGbC,MAAQ,CACNR,kBAAmB,CAAC,MAAO,QAC3B/B,YAAa,GACbC,aAAc,CACZ,CACEG,GAAI,YACJE,KAAM,uBACNhB,KAAM,CAAC,qBAAO,UAAW,KAAM,iBAEjC,CACEc,GAAI,YACJE,KAAM,uBACNhB,KAAM,CAAC,KAAM,WAAY,aAE3B,CACEc,GAAI,YACJE,KAAM,uBACNhB,KAAM,CAAC,UAAW,WAAY,KAAM,iBAEtC,CACEc,GAAI,YACJE,KAAM,uBACNhB,KAAM,CAAC,WAAY,KAAM,QAG7BL,QAAS,CACP,qBACA,KACA,WACA,UACA,WACA,KACA,KACA,eACA,mBAIJiB,cAAgB,SAAAsC,GAAc,IAAAC,EACUC,EAAKH,MAAnCvC,EADoByC,EACpBzC,YADoByC,EACPxC,aACRZ,IAAI,SAAAc,GAQf,OAPIA,EAASC,KAAOoC,IACdxC,EAAYS,SAAS+B,GACvBxC,EAAY2C,OAAO3C,EAAY4C,QAAQJ,GAAa,GAEpDxC,EAAY6C,KAAKL,IAGdrC,IAETuC,EAAKI,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKL,EAAKH,MADV,CAEEvC,oBAIJiD,cAAgB,WAAM,IAAAC,EACkBR,EAAKH,MAAnCvC,EADYkD,EACZlD,YAAaC,EADDiD,EACCjD,aACfkD,EAAiB,GACvBlD,EAAaZ,IAAI,SAAAc,GACf,OAAIH,EAAYS,SAASN,EAASC,KAChC+C,EAAeN,KAAK1C,GACb,MAEF,OAET,IAAMiD,EAAS,CACbD,iBACAE,WAAY,QAEd,OAAOC,KAAKC,UAAUH,EAAQ,KAAM,MAGtCI,aAAe,WAAM,IAAAC,EACmBf,EAAKH,MAAnCvC,EADWyD,EACXzD,YAAaC,EADFwD,EACExD,aACjBkD,EAAiB,GACrBlD,EAAaZ,IAAI,SAAAc,GACf,OAAIH,EAAYS,SAASN,EAASC,KAChC+C,EAAcJ,OAAAC,EAAA,EAAAD,CAAA,GACTI,EADSJ,OAAAW,EAAA,EAAAX,CAAA,GAEX5C,EAASC,GAAK,CACbd,KAAMa,EAASb,QAGZ,MAEF,OAET,IAAM8D,EAAML,OAAAC,EAAA,EAAAD,CAAA,GACPI,EADO,CAEVE,WAAY,QAEd,OAAOM,IAAOC,MAAM,SAAUR,MAGhCpB,eAAiB,SAAA6B,GACf,IAEIT,EAFEU,EAAUC,SAAS3E,cAAc,KAGpB,SAAfyE,EACFT,EAAS,IAAIY,KAAK,CAACtB,EAAKO,iBAAkB,CACxC5C,KAAM,8BAEgB,QAAfwD,IACTT,EAAS,IAAIY,KAAK,CAACtB,EAAKc,gBAAiB,CACvCnD,KAAM,+BAGK,OAAX+C,IAOFU,EAAQG,KAAOC,IAAIC,gBAAgBf,GACnCU,EAAQM,SAAR,UAAAC,OAA6BR,GAC7BS,OAAOC,KAAKL,IAAIC,gBAAgBf,8EAI3B,IAAAoB,EAMHC,KAAKlC,MAJPvC,EAFKwE,EAELxE,YACAC,EAHKuE,EAGLvE,aACAhB,EAJKuF,EAILvF,QACA8C,EALKyC,EAKLzC,kBAEF,OACE7C,EAAAC,EAAAC,cAACsF,EAAD,CACE1E,YAAaA,EACbC,aAAcA,EACdhB,QAASA,EACT8C,kBAAmBA,EACnB7B,cAAeuE,KAAKvE,cACpBkB,WAAYqD,KAAKxB,gBACjB5B,UAAWoD,KAAKjB,eAChBxB,eAAgByC,KAAKzC,wBA1IF2C,aCA3BC,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAASf,SAASgB,eAAe","file":"static/js/main.d305baff.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst DataSetWrapper = styled.div`\n  display: flex;\n  background-color: #fff;\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 20px;\n  box-shadow: 0px 0px 15px #e3e3e3;\n  margin-top: 30px;\n`;\n\nconst DataSetList = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n\nconst DataItem = styled.span`\n  margin-right: 10px;\n  :last-child {\n    margin: 0;\n  }\n`;\n\nconst DataSetPresenter = props => {\n  const { dataSet } = props;\n  return (\n    <DataSetWrapper>\n      <h2>데이터셋</h2>\n      <DataSetList>\n        {dataSet.map(data => (\n          <DataItem key={data}>{data}</DataItem>\n        ))}\n      </DataSetList>\n    </DataSetWrapper>\n  );\n};\n\nexport default DataSetPresenter;\n","import DataSetPresenter from './DataSetPresenter';\n\nexport default DataSetPresenter;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SupplierListWrapper = styled.div`\n  display: flex;\n  background-color: #fff;\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 20px;\n  box-shadow: 0px 0px 15px #e3e3e3;\n  margin-top: 30px;\n`;\n\nconst SupplierRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n`;\n\nconst SupplierName = styled.div`\n  display: flex;\n  font-weight: bold;\n  margin-right: 10px;\n`;\n\nconst DataItem = styled.span`\n  display: flex;\n  margin-left: 8px;\n  :last-child {\n    margin-left: 0;\n  }\n`;\n\nconst SupplierListPresenter = props => {\n  const { checkedList, supplierList, handleSetData } = props;\n  return (\n    <SupplierListWrapper>\n      <h2>공급사별 데이터</h2>\n      {supplierList.map(supplier => (\n        <SupplierRow key={supplier.id}>\n          <input\n            type=\"checkbox\"\n            name={supplier.id}\n            value={supplier.id}\n            checked={checkedList.includes(supplier.id) ? true : false}\n            onChange={() => handleSetData(supplier.id)}\n          />\n          <SupplierName>{supplier.name}</SupplierName>\n          {supplier.data.map(item => (\n            <DataItem key={item}>{item}</DataItem>\n          ))}\n        </SupplierRow>\n      ))}\n    </SupplierListWrapper>\n  );\n};\n\nexport default SupplierListPresenter;\n","import SupplierListPresenter from './SupplierListPresenter';\n\nexport default SupplierListPresenter;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst PreviewWrapper = styled.div`\n  display: flex;\n  background-color: #fff;\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 20px;\n  box-shadow: 0px 0px 15px #e3e3e3;\n  margin-top: 30px;\n`;\n\nconst PreviewContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n\nconst ResultWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst PreviewPresenter = props => {\n  const { jsonResult, xmlResult } = props;\n  return (\n    <PreviewWrapper>\n      <h2>미리보기</h2>\n      <PreviewContainer>\n        <ResultWrapper>\n          <h3>JSON</h3>\n          <pre>{jsonResult}</pre>\n        </ResultWrapper>\n        <ResultWrapper>\n          <h3>XML</h3>\n          <pre>{xmlResult}</pre>\n        </ResultWrapper>\n      </PreviewContainer>\n    </PreviewWrapper>\n  );\n};\n\nexport default PreviewPresenter;\n","import PreviewPresenter from './PreviewPresenter';\n\nexport default PreviewPresenter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nimport DataSet from '../DataSet';\nimport SupplierList from '../SupplierList';\nimport Preview from '../Preview';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  body {\n    background-color: #ECF0F1;\n  }\n  h2 {\n    font-size: 1.5em;\n    font-weight: 700;\n    margin-bottom: 1em;\n  }\n  h3 {\n    font-size: 1.3em;\n    font-weight: 500;\n    margin-bottom: 1em;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  padding: 50px;\n  flex-direction: column;\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  background-color: #fff;\n  flex-direction: column;\n  padding: 20px;\n  border-radius: 20px;\n  box-shadow: 0px 0px 15px #e3e3e3;\n  margin-top: 30px;\n`;\n\nconst AppPresenter = props => {\n  const {\n    checkedList,\n    supplierList,\n    dataSet,\n    extractFormatList,\n    handleSetData,\n    jsonResult,\n    xmlResult,\n    downloadResult\n  } = props;\n  return (\n    <Container>\n      <GlobalStyle />\n      <DataSet dataSet={dataSet} />\n      <SupplierList\n        checkedList={checkedList}\n        supplierList={supplierList}\n        dataSet={dataSet}\n        handleSetData={handleSetData}\n      />\n      <InfoWrapper>\n        <h2>지원 데이터 포맷</h2>\n        {extractFormatList.map(extractFormat => (\n          <span key={extractFormat}>{extractFormat}</span>\n        ))}\n      </InfoWrapper>\n      <Preview jsonResult={jsonResult} xmlResult={xmlResult} />\n      <InfoWrapper>\n        <h2>다운로드</h2>\n        <div>\n          <button onClick={() => downloadResult('json')}>Download JSON</button>\n          <button onClick={() => downloadResult('xml')}>Download XML</button>\n        </div>\n      </InfoWrapper>\n    </Container>\n  );\n};\n\nexport default AppPresenter;\n","import AppContainer from './AppContainer';\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport js2xml from 'js2xmlparser';\nimport AppPresenter from './AppPresenter';\n\nclass AppContainer extends Component {\n  state = {\n    extractFormatList: ['XML', 'JSON'],\n    checkedList: [],\n    supplierList: [\n      {\n        id: 'supplierA',\n        name: '공급사 A',\n        data: ['카메라', 'Macbook', 'S9', '볼펜']\n      },\n      {\n        id: 'supplierB',\n        name: '공급사 B',\n        data: ['TV', 'Computer', 'iPhone X']\n      },\n      {\n        id: 'supplierC',\n        name: '공급사 C',\n        data: ['Macbook', 'iPhone X', 'G7', '벤츠']\n      },\n      {\n        id: 'supplierD',\n        name: '공급사 D',\n        data: ['iPhone X', 'S9', 'G7']\n      }\n    ],\n    dataSet: [\n      '카메라',\n      'TV',\n      'Computer',\n      'Macbook',\n      'iPhone X',\n      'S9',\n      'G7',\n      '벤츠',\n      '볼펜'\n    ]\n  };\n\n  handleSetData = supplierId => {\n    const { checkedList, supplierList } = this.state;\n    supplierList.map(supplier => {\n      if (supplier.id === supplierId) {\n        if (checkedList.includes(supplierId)) {\n          checkedList.splice(checkedList.indexOf(supplierId), 1);\n        } else {\n          checkedList.push(supplierId);\n        }\n      }\n      return supplier;\n    });\n    this.setState({\n      ...this.state,\n      checkedList\n    });\n  };\n\n  getJsonResult = () => {\n    const { checkedList, supplierList } = this.state;\n    const supplierResult = [];\n    supplierList.map(supplier => {\n      if (checkedList.includes(supplier.id)) {\n        supplierResult.push(supplier);\n        return null;\n      }\n      return null;\n    });\n    const result = {\n      supplierResult,\n      dataFormat: 'JSON'\n    };\n    return JSON.stringify(result, null, 2);\n  };\n\n  getXmlResult = () => {\n    const { checkedList, supplierList } = this.state;\n    let supplierResult = {};\n    supplierList.map(supplier => {\n      if (checkedList.includes(supplier.id)) {\n        supplierResult = {\n          ...supplierResult,\n          [supplier.id]: {\n            data: supplier.data\n          }\n        };\n        return null;\n      }\n      return null;\n    });\n    const result = {\n      ...supplierResult,\n      dataFormat: 'XML'\n    };\n    return js2xml.parse('result', result);\n  };\n\n  downloadResult = resultType => {\n    const element = document.createElement('a');\n    // const reader = new FileReader();\n    let result;\n    if (resultType === 'json') {\n      result = new Blob([this.getJsonResult()], {\n        type: 'plain/text;charset=utf-8;'\n      });\n    } else if (resultType === 'xml') {\n      result = new Blob([this.getXmlResult()], {\n        type: 'plain/text;charset=utf-8;'\n      });\n    }\n    if (result !== null) {\n      // reader.onload = e => {\n      //   window.location.href = reader.result;\n      //   console.log(e.target.fileName);\n      // };\n      // reader.fileName = `result.${resultType}`;\n      // reader.readAsDataURL(result);\n      element.href = URL.createObjectURL(result);\n      element.download = `result.${resultType}`;\n      window.open(URL.createObjectURL(result));\n    }\n  };\n\n  render() {\n    const {\n      checkedList,\n      supplierList,\n      dataSet,\n      extractFormatList\n    } = this.state;\n    return (\n      <AppPresenter\n        checkedList={checkedList}\n        supplierList={supplierList}\n        dataSet={dataSet}\n        extractFormatList={extractFormatList}\n        handleSetData={this.handleSetData}\n        jsonResult={this.getJsonResult()}\n        xmlResult={this.getXmlResult()}\n        downloadResult={this.downloadResult}\n      />\n    );\n  }\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}